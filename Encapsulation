class BankAccount:
    def __init__(self, owner, balance=0):
        self.__owner = owner        # private attribute
        self.__balance = balance    # private attribute

    # Public method to deposit money
    def deposit(self, amount):
        self.__balance += amount
        print(f"{amount} deposited. New Balance: {self.__balance}")

    # Public method to withdraw money
    def withdraw(self, amount):
        if amount <= self.__balance:
            self.__balance -= amount
            print(f"{amount} withdrawn. New Balance: {self.__balance}")
        else:
            print("Insufficient funds!")

    # Getter method to safely access private balance
    def get_balance(self):
        return self.__balance

# ---------------- Main ----------------
account = BankAccount("Alice", 1000)

# Access via methods (allowed)
account.deposit(500)
account.withdraw(300)
print("Final Balance:", account.get_balance())

# Direct access (not allowed → will cause error)
# print(account.__balance)  # ❌ AttributeError


✅ Output:
500 deposited. New Balance: 1500
300 withdrawn. New Balance: 1200
Final Balance: 1200
